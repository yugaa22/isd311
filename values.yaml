#####################################################
global:
  ## URL that will be used to access ISD. MUST BE CHANGED
  ## Ensure that this URL is reachable from your browser. Either DNS name server record must exist or "hosts" file must be updated

  ssl:
    enabled: true # Set to true if using "httpS" urls. TLS certificates must be generated for the above URL

  certManager:
    installed: true # Set to true if you have cert-manager installed in the cluster, the URL must be accessible from the internet

  ## nginx ingress objects are created if set to true. Set to false if using LoadBalancer or any other ingress
  ## The cluster MUST have nginx ingress controller already installed
  createIngress: true
  commonGate:
    enabled: false

    # Spinnaker Deck URL configuration; url overwhich spinnaker deck will be accessed
  spinDeck:
    protocol: https                ## Change to https if using SSL
    host: spindeck311.iswstash.opsmx.com ## MUST CHANGE
    #port: 31464

    serviceAnnotations: {}

    ingress:
      annotations:
        ingress.kubernetes.io/ssl-redirect: "true"
        kubernetes.io/ingress.class: nginx
      tls:
        secretName: spin-deck-ingress

  # Spinnaker Gate URL configuration; url overwhich spinnaker gate will be accessed
  spinGate:
    protocol: https
    host: spingate311.iswstash.opsmx.com
    #port: 31465

    serviceAnnotations: {}
    ingress:
      annotations:
        ingress.kubernetes.io/ssl-redirect: "true"
        kubernetes.io/ingress.class: nginx
      tls:
        secretName: spin-gate-ingress

  ## OES-UI url configuration
  oesUI:
    protocol: https
    host: oes311.iswstash.opsmx.com
    # Use below port when hostname above is an external IP instead of a hostname
    #port: 31466

    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
      tls:
        secretName: oes-ui-ingress

  ## OES-Gate url configuration
  oesGate:
    protocol: https
    host: oesgate.iswstash.opsmx.com
    # Use below port when hostname above is an external IP instead of a hostname
    #port: 31467
    
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
      tls:
        secretName: oes-gate-ingress

  #Only for trial purposes, pod-baesd git is installed and automatically configured
  gitea: 
    enabled: false # Set to true for trial-install only

  saporgate:
    config:
      username: admin      # User name with admin permissions and belonging to admin groups defined in platform service
      password: encrypted:saporpassword:saporpassword # Any generic String, need not be the real password

  ###############################################################################
  # A trial LDAP is installed by default, with users: admin, user1,2,3 with user1password, user2pa...
  # Set it to false if own LDAP is to be configured
  installOpenLdap: true

  ## ldap configuration used in oes-gate, oes-platform and spinnaker gate for authentication and authorization
    
  ldap:
    enabled: true
    url: ldap://{{ .Release.Name }}-openldap:389
    managerDn: cn=admin,dc=example,dc=org
    managerPassword: encrypted:ldappassword:ldappassword
    groupSearchBase: ou=groups,dc=example,dc=org
    groupSearchFilter: member={0}
    groupRoleAttributes: cn
    userDnPattern: cn={0},dc=example,dc=org

  minio:
    accessKey: encrypted:miniopassword:miniopassword
    secretKey: encrypted:miniopassword:miniopassword

####################################################
spinnaker:
  gitopsHalyard: # A repo with appropriate contents used for configuring Spinnaker
    repo:
      type: git # git, s3, stash(bitbucket server) use a different sample values file for s3/bitbuck-stash
      ## Git repo details, https://<baseUrlHostName>/<organization>/<repository>
      organization: yugaa22
      repository: isd311 # repo name for GitOps Halyard, will be created if "githubcreationHook" is set to true
      username: yugaa22  # Username to authenticate with git/stash repo
      token: encrypted:gittoken:gittoken  # Token corresponding to above username
      dynamicAccRepository: isd311 # Repo name of the GitOps Dynamic Accounts Directory, Can be same as "repository"

      ########################################################################################
      ## Additional git-repo parameters, typically no need to be change
      ########################################################################################

      configArgs: "http.sslVerify=false"  # Extra arguments to the git clone command
      ## Configure below fields only if repo type is git/stash.
      baseUrlHostName: github.com    # Change only if using enterprise git or another repo-type
      projectName: ""                # Specify project name only if repo is under a project
      halConfigBranch: master        # Branch for the "repository", recommend to keep "main"
      halConfigPath: /               #relative path from repository root folder
      dynAccntConfigPath: /          #relative path from repository root folder
      
  ########################################################################################
  # Lines below this do not need to be changed except where external SSO and DBs are used
  ########################################################################################
  
  ## Here basic ldap auth is used by default; everything under spinCli will be pasted in ~/.spin/config
  spinCli:
    auth:
      basic:
        username: admin          # Use credentials corresponding to saporgate.config.username
        password: encrypted:saporpassword:saporpassword     # Use credentials corresponding to saporgate.config.password

####################################################

db:
  url: jdbc:postgresql://oes-db:5432
  username: postgres
  password: encrypted:dbpassword:dbpassword

###############################################################################
gate:
  config:
    #####################################################
    # SAML AUthentication
    #####################################################
    # keytool -genkey -v -keystore oessaml.jks -alias saml -keyalg RSA -keysize 2048 -validity 10000
    # oessaml.jks and oesmetadata.xml are mounted as secrets, create them as follows
    # kubectl create secret generic oesmetadataxml --from-file=oesmetadata.xml -n <namespace>
    # kubectl create secret generic oessamljks --from-file=oessaml.jks -n <namespace>
    # kubectl create secret generic samljks-password --from-literal password=changeit -n <namespace>
    saml:
      enabled: false
      userSource: gate  # Groups will be obtained from SAML
      keyStore: /opt/spinnaker/saml/oessaml.jks  # The key in this secret must be oessaml.jks
      keyStorePassword: encrypted:keystorepassword:keystorepassword
      keyStoreAliasName: saml
      metadataUrl: /opt/spinnaker/saml/oesmetadata.xml # The key in this secret must be oesmetadata.xml
      redirectProtocol: https
      redirectHostname: oes-gate.ryzon7-gitops.opsmx.org  # OES gate host name
      redirectBasePath: /
      issuerId: ryzonoesgate
      jksSecretName: oessamljks
      metadataSecretName: oesmetadataxml

    #####################################################
    #OAUTH2 Authentication for GitHub
    #####################################################
    oauth2:
      enabled: false
      client:
        clientId: #CLIENT_ID
        clientSecret: #CLIENT_SECRET_ID
        accessTokenUri: https://github.com/login/oauth/access_token
        userAuthorizationUri: https://github.com/login/oauth/authorize
        scope: user-email
      resource:
        userInfoUri: https://api.github.com/user
      userInfoMapping:
        email: email
        firstName: firstname
        lastName: name
        username: login
      provider: GITHUB

###############################################################################
rabbitmq:
  username: rabbitmq
  password: encrypted:rabbitmqpassword:rabbitmqpassword

###############################################################################


###############################################################################
## Details of redis-master image for OES
redis:
  url: redis://:encrypted:redispassword:redispassword@{{ .Release.Name }}-redis-master
  password: encrypted:redispassword:redispassword
#####################################################
